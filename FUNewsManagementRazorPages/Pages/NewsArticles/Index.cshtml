@page
@using FUNewsManagementSystem.BusinessObject.Enums
@using NewsManagementMVC.Models.ViewModels.NewsArticle
@model FUNewsManagementRazorPages.Pages.NewsArticles.IndexModel

@{
    ViewData["Title"] = "News Article";
    ViewData["CreateFormPartial"] = "NewsArticles/_CreateForm";
    ViewData["EditFormPartial"] = "NewsArticles/_EditForm";
    var isStaff = (int?)ViewData["Role"] == (int)AccountRole.Staff;
    var partialViewData = new ViewDataDictionary(ViewData)
            {
                ["CurrentPage"] = ViewData["CurrentPage"],
                ["TotalPages"] = ViewData["TotalPages"],
                ["Role"] = ViewData["Role"]
            };
}
<link rel="stylesheet" href="~/css/newsArticle.css" />
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
<div class="news-bg py-5">
    <div class="container">
        <h1 class="news-heading mb-4">
            <i class="bi bi-newspaper me-2"></i> News Articles
        </h1>

        <div class="d-flex justify-content-center mb-4">
            @if (isStaff)
            {
                <a href="#" data-bs-toggle="modal" data-bs-target="#createModal" class="btn btn-primary ms-2 create-btn">
                    <i class="bi bi-plus-circle me-1"></i> Create New
                </a>
                @await Html.PartialAsync("_CreateModal", new CreateNewsArticleViewModel())
            }
        </div>
        
        @if (Model.NewsArticle != null && Model.NewsArticle.Any())
        {

            <div id="newsPartialContainer">
                @await Html.PartialAsync("_ListNewsArticlePartial", Model.NewsArticle, partialViewData)
            </div>
        }
        else
        {
            <div class="text-center text-muted">No news articles found.</div>
        }
    </div>
</div>

<!-- Replace the direct partial with the shared _EditModal -->
@await Html.PartialAsync("_EditModal", Model.EditNewsArticle)

@if (Model.NewsArticle != null)
{
    foreach (var item in Model.NewsArticle)
    {
        @await Html.PartialAsync("_DeleteModal", item.NewsArticleId, new ViewDataDictionary(ViewData)
        {
            { "Name", item.NewsTitle }
        })
    }
}
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    @if (ViewData["ShowEditModal"] as bool? == true)
    {
        <script>
            var editModal = new bootstrap.Modal(document.getElementById('editModal'));
            editModal.show();
        </script>
    }
    <script>
        setTimeout(function () {
            document.querySelectorAll('.alert-dismissible').forEach(function(alert) {
                var bsAlert = bootstrap.Alert.getOrCreateInstance(alert);
                bsAlert.close();
            });
        }, 3000);
    </script>
}
<script src="~/js/signalR/dist/browser/signalr.js"></script>
<script src="~/js/site.js"></script>