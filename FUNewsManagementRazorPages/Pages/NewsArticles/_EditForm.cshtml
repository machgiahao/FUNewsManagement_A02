@model NewsManagementMVC.Models.ViewModels.NewsArticle.EditNewsArticleViewModel
@if (Model == null)
{
    <div class="alert alert-danger">Error: EditNewsArticleViewModel is not set.</div>
    return;
}

<form method="post" asp-page-handler="Edit" enctype="multipart/form-data">
    <input type="hidden" asp-for="NewsArticleId" />
    <div class="row mb-3">
        <div class="col-md-6">
            <label asp-for="NewsTitle" class="form-label">Title</label>
            <input asp-for="NewsTitle" class="form-control" placeholder="Enter news title" />
            <span asp-validation-for="NewsTitle" class="text-danger"></span>
        </div>
        <div class="col-md-6">
            <label asp-for="Headline" class="form-label">Headline</label>
            <input asp-for="Headline" class="form-control" placeholder="Enter headline" />
            <span asp-validation-for="Headline" class="text-danger"></span>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-12">
            <label asp-for="NewsContent" class="form-label">Content</label>
            <textarea asp-for="NewsContent" class="form-control" rows="5" placeholder="Enter news content"></textarea>
            <span asp-validation-for="NewsContent" class="text-danger"></span>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-md-6">
            <label asp-for="NewsSource" class="form-label">Source</label>
            <input asp-for="NewsSource" class="form-control" placeholder="Enter news source" />
            <span asp-validation-for="NewsSource" class="text-danger"></span>
        </div>
        <div class="col-md-6">
            <label asp-for="CategoryId" class="form-label">Category</label>
            <select asp-for="CategoryId" asp-items="@(ViewData["CategoryId"] as SelectList)" class="form-select">
                <option value="">-- Select Category --</option>
            </select>
            <span asp-validation-for="CategoryId" class="text-danger"></span>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-md-6">
            <label asp-for="NewsStatus" class="form-label">Status</label>
            <select asp-for="NewsStatus" class="form-select">
                <option value="">-- Status --</option>
                <option value="false">Inactive</option>
                <option value="true">Active</option>
            </select>
        </div>
        <div class="col-md-6">
            <label asp-for="ImageFile" class="form-label">Image</label>
            <input asp-for="ImageFile" type="file" class="form-control" accept="image/*" />
            <span asp-validation-for="ImageFile" class="text-danger"></span>
            @if (Model != null && !string.IsNullOrEmpty(Model.ImageUrl))
            {
                <div class="mt-2">
                    <img src="@Model.ImageUrl" alt="Current Image" style="max-width: 100px; max-height: 100px;" />
                    <div class="text-muted small">Current image</div>
                </div>
            }
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-12">
            <label asp-for="SelectedTagIds" class="form-label">Tags</label>
            <div class="border rounded p-2 tag-pill-container" style="max-height: 250px; overflow-y: auto;">
                <div class="mb-2">
                    <input type="checkbox" class="form-check-input" id="selectAllTags" />
                </div>
                <div class="d-flex flex-wrap gap-2">
                    @if (ViewData["TagIds"] is MultiSelectList tagList)
                    {
                        foreach (var tag in tagList)
                        {
                            // Parse the tag value to int for direct comparison
                            int.TryParse(tag.Value, out int tagIdInt);

                            // Check if the tag is selected - use Contains for direct comparison
                            bool isChecked = Model.SelectedTagIds != null && Model.SelectedTagIds.Contains(tagIdInt);

                            <label class="tag-pill form-check-label mb-0">
                                <input type="checkbox"
                                       class="form-check-input tag-checkbox me-1"
                                       name="SelectedTagIds"
                                       value="@tag.Value"
                                       id="tag_@tag.Value"
                                @(isChecked ? "checked" : "") />
                                @tag.Text
                            </label>
                        }
                    }
                    else
                    {
                        <span class="text-danger">No tags available.</span>
                    }
                </div>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-12 text-end">
            <button type="submit" class="btn btn-primary">Save Changes</button>
        </div>
    </div>
</form>

<style>
    .tag-pill-container {
        margin-top: 0.5rem;
    }

    .tag-pill {
        display: flex;
        align-items: center;
        background: linear-gradient(90deg, #36d1dc 0%, #5b86e5 100%);
        color: #fff;
        border-radius: 999px;
        padding: 0.4em 1em 0.4em 0.8em;
        box-shadow: 0 2px 8px rgba(54, 209, 220, 0.15);
        font-size: 1em;
        font-weight: 500;
        cursor: pointer;
        transition: box-shadow 0.2s;
        margin-bottom: 0.5em;
    }

        .tag-pill input[type="checkbox"] {
            accent-color: #fff;
            margin-right: 0.5em;
        }

        .tag-pill:hover {
            box-shadow: 0 4px 16px rgba(54, 209, 220, 0.25);
            opacity: 0.9;
        }
</style>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        // Log debug information to console
        console.log("EditNewsArticle Model:", @Json.Serialize(Model));
        console.log("SelectedTagIds:", @Json.Serialize(Model.SelectedTagIds));

        // Toggle "Select All"
        $('#selectAllTags').on('change', function () {
            $('.tag-checkbox').prop('checked', this.checked);
        });

        // If any checkbox is unchecked, uncheck "Select All"
        $('.tag-checkbox').on('change', function () {
            if (!this.checked) {
                $('#selectAllTags').prop('checked', false);
            } else if ($('.tag-checkbox:checked').length === $('.tag-checkbox').length) {
                $('#selectAllTags').prop('checked', true);
            }
        });

        // Check the "Select All" checkbox if all tags are already selected
        $(document).ready(function() {
            if($('.tag-checkbox').length > 0 && $('.tag-checkbox').length === $('.tag-checkbox:checked').length) {
                $('#selectAllTags').prop('checked', true);
            }
        });
    </script>
}
