@page
@using FUNewsManagementRazorPages.ViewModels.SystemAccount
@using Microsoft.AspNetCore.Mvc.ViewFeatures
@model FUNewsManagementRazorPages.Pages.SystemAccount.IndexModel
@functions {
    string GetRoleName(int? role)
    {
        return role switch
        {
            0 => "Admin",
            1 => "Staff",
            2 => "Lecturer",
            _ => "Unknown"
        };
    }
}

@{
    ViewData["Title"] = "System Accounts";
    ViewData["CreateFormPartial"] = "SystemAccount/_CreateForm";
    ViewData["EditFormPartial"] = "SystemAccount/_EditForm";
}
<link rel="stylesheet" href="~/css/account.css" />
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
<div class="account-center-container">
    <div class="account-card">
        <div class="account-header">
            <span>System Accounts</span>
            <button type="button" class="account-plus-btn" data-bs-toggle="modal" data-bs-target="#createModal">
                <i class="bi bi-plus"></i>
            </button>
            @await Html.PartialAsync("_CreateModal", Model.CreateAccountViewModel)
        </div>
        <form method="get" class="account-search-row">
            <div class="account-search-group">
                <i class="bi bi-search"></i>
                <input type="text" name="Search.Name" value="@Model.Search.Name" placeholder="Search by name..." />
            </div>
            <div class="account-search-group">
                <i class="bi bi-envelope"></i>
                <input type="text" name="Search.Email" value="@Model.Search.Email" placeholder="Search by email..." />
            </div>
            <select name="Search.Role" class="account-role-select">
                <option value="" selected="@(Model.Search.Role == null)">All Roles</option>
                <option value="0" selected="@(Model.Search.Role == 0)">Admin</option>
                <option value="1" selected="@(Model.Search.Role == 1)">Staff</option>
                <option value="2" selected="@(Model.Search.Role == 2)">Lecturer</option>
            </select>
            <button type="submit" class="account-search-btn">
                <i class="bi bi-search"></i>
            </button>
        </form>
        <div class="account-table-responsive">
            <table class="account-table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Role</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.SystemAccount.Any())
                    {
                        @foreach (var item in Model.SystemAccount)
                        {
                            <tr>
                                <td>@item.AccountName</td>
                                <td>
                                    <a href="mailto:@item.AccountEmail">@item.AccountEmail</a>
                                </td>
                                <td>
                                    <span class="account-role-badge @(item.AccountRole == 1 ? "staff" : item.AccountRole == 2 ? "lecturer" : "admin")">
                                        @GetRoleName(item.AccountRole)
                                    </span>
                                </td>
                                <td>
                                    <a asp-page-handler="Edit" asp-route-id="@item.AccountId"
                                       class="circle-btn edit" title="Edit" onclick="event.stopPropagation();">
                                        <i class="bi bi-pencil fs-5"></i>
                                    </a>
                                    <button type="button" class="circle-btn delete"
                                            title="Delete"
                                            data-bs-toggle="modal"
                                            data-bs-target="#deleteModal-@item.AccountId"
                                            onclick="event.stopPropagation();">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                    @await Html.PartialAsync("_DeleteModal", item.AccountId.ToString(), new ViewDataDictionary(ViewData) { { "Name", item.AccountName } })
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="4" class="text-center text-muted py-4">No accounts found.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@await Html.PartialAsync("_EditModal", Model.EditAccountViewModel)

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    @if (ViewData["ShowEditModal"] as bool? == true)
    {
        <script>
            var editModal = new bootstrap.Modal(document.getElementById('editModal'));
            editModal.show();
        </script>
    }
    <script>
        setTimeout(function () {
            document.querySelectorAll('.alert-dismissible').forEach(function(alert) {
                var bsAlert = bootstrap.Alert.getOrCreateInstance(alert);
                bsAlert.close();
            });
        }, 3000);
    </script>
}
